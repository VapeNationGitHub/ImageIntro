import UIKit
import Foundation
import ProgressHUD

// MARK: - –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ Splash
final class SplashViewController: UIViewController {
    
    // MARK: - –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    private let ShowAuthenticationScreenSegueIdentifier = "ShowAuthenticationScreen"
    private let oauth2Service = OAuth2Service.shared
    private let oauth2TokenStorage = KeychainTokenStorage.shared
    private let profileService = ProfileService.shared // ‚úÖ –î–æ–±–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ ProfileService
    
    // MARK: - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        print("‚úÖ SplashViewController –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        if let token = KeychainTokenStorage.shared.token {
            print("üîê –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å...")
            fetchProfile(token) // ‚úÖ –ó–∞–º–µ–Ω–∏–ª–∏ switchToTabBarController() –Ω–∞ fetchProfile(token)
        } else {
            print("üü° –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
            performSegue(withIdentifier: ShowAuthenticationScreenSegueIdentifier, sender: nil)
        }
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        setNeedsStatusBarAppearanceUpdate()
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        .lightContent
    }
    
    // MARK: - –ú–µ—Ç–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É TabBar-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
    private func switchToTabBarController() {
        guard let window = UIApplication.shared.windows.first else {
            fatalError("Invalid Configuration")
        }
        let tabBarController = UIStoryboard(name: "Main", bundle: .main)
            .instantiateViewController(withIdentifier: "TabBarViewController")
        window.rootViewController = tabBarController
    }
}

// MARK: - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É
extension SplashViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == ShowAuthenticationScreenSegueIdentifier {
            guard
                let navigationController = segue.destination as? UINavigationController,
                let viewController = navigationController.viewControllers.first as? AuthViewController
            else {
                fatalError("Failed to prepare for \(ShowAuthenticationScreenSegueIdentifier)")
            }
            print("‚úÖ prepare: –¥–µ–ª–µ–≥–∞—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞–ø—Ä—è–º—É—é")
            viewController.delegate = self
        } else {
            super.prepare(for: segue, sender: sender)
        }
    }
}

// MARK: - –î–µ–ª–µ–≥–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
extension SplashViewController: AuthViewControllerDelegate {
    func authViewController(_ vc: AuthViewController, didAuthenticateWithCode code: String) {
        dismiss(animated: true) { [weak self] in
            guard let self = self else { return }
            self.fetchOAuthToken(code)
        }
    }
    
    // MARK: - –ó–∞–ø—Ä–æ—Å —Ç–æ–∫–µ–Ω–∞ –ø–æ –∫–æ–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    private func fetchOAuthToken(_ code: String) {
        UIBlockingProgressHUD.show() // ‚úÖ –ë–ª–æ–∫–∏—Ä—É–µ–º UI
        oauth2Service.fetchOAuthToken(code: code) { [weak self] result in
            guard let self = self else { return }
            
            switch result {
            case .success(let token):
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–∫–µ–Ω. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å...")
                self.fetchProfile(token) // ‚úÖ –ü–æ—Å–ª–µ —Ç–æ–∫–µ–Ω–∞ —Å—Ä–∞–∑—É –≥—Ä—É–∑–∏–º –ø—Ä–æ—Ñ–∏–ª—å
            case .failure(let error):
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: \(error)")
                UIBlockingProgressHUD.dismiss()
            }
        }
    }
    
    // MARK: - –ó–∞–ø—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    private func fetchProfile(_ token: String) {
        UIBlockingProgressHUD.show()
        
        ProfileService.shared.fetchProfile(token) { [weak self] result in
            UIBlockingProgressHUD.dismiss()
            
            guard let self = self else { return }
            
            switch result {
            case .success(let profile):
                // –°—Ç–∞—Ä—Ç—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞–≤–∞—Ç–∞—Ä–∫–∏, –Ω–æ –Ω–µ –∂–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                ProfileImageService.shared.fetchProfileImageURL(username: profile.username) { _ in }
                self.switchToTabBarController()
                
            case .failure(let error):
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: \(error)")
                // TODO: –ü–æ–∫–∞–∑–∞—Ç—å alert –æ–± –æ—à–∏–±–∫–µ
            }
        }
    }
}
