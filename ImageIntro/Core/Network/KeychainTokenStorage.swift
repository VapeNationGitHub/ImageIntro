import Foundation
import SwiftKeychainWrapper

final class KeychainTokenStorage {
    static let shared = KeychainTokenStorage()
    private init() {}
    
    private let tokenKey = "bearerToken"
    
    var token: String? {
        get {
            let token = KeychainWrapper.standard.string(forKey: tokenKey)
            print("üß™ [Keychain] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞: \(token?.prefix(10) ?? "nil")")
            return token
        }
        set {
            if let token = newValue {
                print("üíæ [Keychain] –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω: \(token.prefix(10))...")
                KeychainWrapper.standard.set(token, forKey: tokenKey)
            } else {
                print("üßπ [Keychain] –£–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω")
                KeychainWrapper.standard.removeObject(forKey: tokenKey)
            }
        }
    }
    
    func removeToken() {
        token = nil
    }

}

